{"version":3,"sources":["../../js/src/BsMultiSelect.es8.js"],"names":["window","$","Popper","JQUERY_NO_CONFLICT","pluginName","dataKey","defFilterInputItemStyleSys","defFilterInputStyle","defSelectedPanelStyle","defSelectedItemStyle","defRemoveSelectedItemButtonStyle","defaults","Plugin","jQueryInterface","fn","display","width","border","padding","outline","cursor","flex-wrap","align-items","margin-bottom","padding-left","font-size","items","selectedPanelMinHeight","selectedPanelReadonlyBackgroundColor","selectedPanelValidBoxShadow","selectedPanelInvalidBoxShadow","filterInputColor","containerClass","dropDownMenuClass","dropDownItemClass","selectedPanelClass","selectedPanelReadonlyClass","selectedItemClass","removeSelectedItemButtonClass","filterInputItemClass","filterInputClass","element","options","_classCallCheck","this","TypeError","extend","input","container","dropDownMenu","selectedPanel","filterInput","filterInputItem","popper","skipFocusout","backspaceAtStartPoint","selectedDropDownItem","selectedDropDownIndex","hasItems","init","key","value","update","removeClass","addClass","optionId","isChecked","i","length","selected","val","clearFilterInput","hideDropDown","updateDropDownPosition","filterDropDownMenu","text","trim","visible","find","each","$item","show","itemText","prop","toLowerCase","includes","hide","resetSelectDropDownMenu","event","preventDefault","stopPropagation","menuItem","currentTarget","closest","$menuItem","data","$checkBox","$selectedItem","concat","removeSelectedItem","createAndAppendSelectedItem","focus","itemValue","checkBoxId","name","checked","appendTo","_this","css","insertBefore","$buttom","setCheck","click","style","item","_toConsumableArray","querySelectorAll","textContent","undefined","classList","remove","down","showDropDown","newIndex","add","_this2","$input","disabled","$container","insertAfter","get","$selectedPanel","hasClass","$filterInputItem","$filterInput","$dropDownMenu","placement","modifiers","flip","behavior","forEach","appendDropDownItem","selectOptions","index","option","background-color","inputId","id","formGroup","label","querySelector","attr","setAttribute","clickDropDownItem","on","target","nodeName","parentElement","which","keyCode","keydownArrow","selectionStart","selectionEnd","analyzeInputText","closeDropDown","startPosition","array","itemToDelete","dataset","adoptFilterInputLength","focusin","focusout","mousedown","document","mouseup","contains","test","optionsObject","_typeof","methodName","charAt","toUpperCase","slice","Constructor","noConflict"],"mappings":"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","sourcesContent":["import $ from 'jquery'\r\nimport Popper from 'popper.js'\r\n\r\n// TODO: \r\n// 2) require polyfill Element.closest polyfill IE 11\r\n// 3) require multiple classList.add polyfill IE 11\r\n\r\n// IIFE to declare private members\r\nconst BsMultiSelect = ((window, $, Popper) => {\r\n    const JQUERY_NO_CONFLICT = $.fn[pluginName];\r\n    const pluginName = \"dashboardCodeBsMultiSelect\";\r\n    const dataKey = \"plugin_\" + pluginName;\r\n\r\n    const defFilterInputItemStyleSys = {\"display\": \"block\"};\r\n    const defSelectedPanelClass = \"form-control btn border\";\r\n    const defFilterInputStyle = {\"width\": \"2ch\", \"border\": \"0\", \"padding\": \"0\", \"outline\": \"none\"};\r\n    const defSelectedPanelStyle = {\"cursor\": \"text\", \"display\": \"flex\", \"flex-wrap\": \"wrap\", \"align-items\": \"center\", \"margin-bottom\": \"0px\"};\r\n    const defSelectedItemClass = \"badge\";\r\n    const defSelectedItemStyle = {\"padding-left\": \"0px\", \"display\": \"flex\", \"align-items\": \"center\"};\r\n    const defRemoveSelectedItemButtonClass = \"close\";\r\n    const defRemoveSelectedItemButtonStyle = {\"font-size\": \"100%\"};\r\n    const defaults = {\r\n        items: [],\r\n        defaults: [],\r\n        //usePopper: true,\r\n        selectedPanelMinHeight: \"calc(2.25rem + 2px)\",\r\n        selectedPanelReadonlyBackgroundColor: \"#e9ecef\",\r\n        selectedPanelValidBoxShadow: \" 0 0 0 0.2rem rgba(40, 167, 69, 0.25)\",\r\n        selectedPanelInvalidBoxShadow: \"0 0 0 0.2rem rgba(220, 53, 69, 0.25)\",\r\n        filterInputColor: \"#495057\",\r\n        containerClass: \"dashboardcode-bsmultiselect\",\r\n        dropDownMenuClass: \"dropdown-menu\",\r\n        dropDownItemClass: \"px-2\",\r\n        selectedPanelClass: \"\",\r\n        selectedPanelReadonlyClass: \"\",\r\n        selectedItemClass: \"\", \r\n        removeSelectedItemButtonClass: \"\",\r\n        filterInputItemClass: \"\", \r\n        filterInputClass: \"\"\r\n    };\r\n\r\n    class Plugin {\r\n        constructor(element, options) {\r\n            if (typeof Popper === 'undefined') {\r\n                throw new TypeError('DashboardCode bsMultiSelect require Popper.js (https://popper.js.org)')\r\n            }\r\n\r\n            // readonly\r\n            this.element = element;\r\n            this.options = $.extend({}, defaults, options);\r\n            this.input = element;\r\n            this.container = null;\r\n            this.dropDownMenu = null;\r\n            this.selectedPanel = null;\r\n            this.filterInput = null;\r\n            this.filterInputItem = null;\r\n            this.popper = null;\r\n\r\n            // state\r\n            this.skipFocusout = false;\r\n            this.backspaceAtStartPoint = null;\r\n            this.selectedDropDownItem = null;\r\n            this.selectedDropDownIndex = null;\r\n            this.hasItems = false;\r\n\r\n            this.init();\r\n        }\r\n\r\n        updateDropDownPosition() {\r\n            //console.log(\"updateDropDownPosition\");\r\n            //if (this.options.usePopper) {\r\n                this.popper.update();\r\n            // } else {\r\n            //     $(this.dropDownMenu).dropdown('update');\r\n            // }\r\n        }\r\n\r\n        hideDropDown() {\r\n            //if (this.options.usePopper) {\r\n                //console.log(\"popper remove show\");\r\n                $(this.dropDownMenu).removeClass('show')\r\n            // } else {\r\n            //     if ($(this.dropDownMenu).hasClass('show'))\r\n            //         $(this.dropDownMenu).dropdown('toggle');\r\n            // }\r\n        }\r\n\r\n        showDropDown() {\r\n            if (this.hasItems) {\r\n                //if (this.options.usePopper) {\r\n                    //console.log(\"popper add show\");\r\n                    $(this.dropDownMenu).addClass('show')\r\n                // } else {\r\n                //     if (!$(this.dropDownMenu).hasClass('show'))\r\n                //         $(this.dropDownMenu).dropdown('toggle');\r\n                // }\r\n            }\r\n        }\r\n\r\n        setCheck(optionId, isChecked) {\r\n            for (var i = 0; i < this.input.options.length; i += 1) {\r\n                var option = this.input.options[i];\r\n                if (option.value == optionId) {\r\n                    this.input.options[i].selected = isChecked;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Public methods\r\n        getInputValue() {\r\n            return $(this.input).val();\r\n        }\r\n\r\n        closeDropDown() {\r\n            this.clearFilterInput();\r\n            this.hideDropDown();\r\n            this.updateDropDownPosition();\r\n        }\r\n\r\n\r\n        clearFilterInput() {\r\n            if (this.filterInput.value != '') {\r\n                this.filterInput.value = '';\r\n                this.filterDropDownMenu();\r\n                if (this.hasItems) {\r\n                    this.updateDropDownPosition(); \r\n                } \r\n            }\r\n        }\r\n\r\n        filterDropDownMenu() {\r\n            var text = this.filterInput.value.trim();\r\n            var visible = 0;\r\n            $(this.dropDownMenu).find('li').each(function () {\r\n                var $item = $(this);\r\n                if (text == \"\") {\r\n                    $item.show();\r\n                    visible++;\r\n                }\r\n                else {\r\n                    var itemText = $item.text();\r\n                    var $checkbox = $item.find('input[type=\"checkbox\"]');\r\n                    \r\n                    if (!$checkbox.prop('checked') && itemText.toLowerCase().includes(text.toLowerCase())) {\r\n                        $item.show();\r\n                        visible++;\r\n                    } else {\r\n                        $item.hide();\r\n                    }\r\n                }\r\n            });\r\n            this.hasItems = (visible > 0);\r\n            this.resetSelectDropDownMenu();\r\n        }\r\n\r\n        clickDropDownItem(event) {\r\n            //console.log(\"filter & stopPropagation\");\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n\r\n            var menuItem = event.currentTarget.closest(\"LI\");\r\n            var $menuItem = $(menuItem);\r\n            var optionId = $menuItem.data(\"option-id\");\r\n            var $checkBox = $menuItem.find('input[type=\"checkbox\"]');\r\n            if ($checkBox.prop('checked')) {\r\n                var $selectedItem = $(this.selectedPanel).find(`li[data-option-id=\"${optionId}\"]`);\r\n                this.removeSelectedItem($selectedItem, optionId, $checkBox);\r\n            } else {\r\n                var itemText = $menuItem.find('label').text();\r\n                this.createAndAppendSelectedItem($checkBox, optionId, itemText);\r\n                $checkBox.prop('checked', true);\r\n            }\r\n            this.clearFilterInput();\r\n            $(this.filterInput).focus();\r\n        }\r\n\r\n        \r\n        appendDropDownItem(itemValue, itemText, isChecked) {\r\n            var optionId = itemValue;\r\n            var checkBoxId = `dashboardcode-bsmultiselect-${this.input.name.toLowerCase()}-generated-id-${optionId.toLowerCase()}`;\r\n            var checked = isChecked ? \"checked\" : \"\";\r\n            var $dropDownItem = $(\r\n                `<li data-option-id=\"${optionId}\">\r\n                    <div class=\"custom-control custom-checkbox\">\r\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"${checkBoxId}\" ${checked}>\r\n                        <label class=\"custom-control-label\" for=\"${checkBoxId}\">${itemText}</label>\r\n                    </div>\r\n                 </li>`).addClass(this.options.dropDownItemClass).appendTo($(this.dropDownMenu));\r\n\r\n            var $checkBox = $dropDownItem.find(`input[type=\"checkbox\"]`);\r\n            if (isChecked) {\r\n                this.createAndAppendSelectedItem($checkBox, optionId, itemText);\r\n            }\r\n        }\r\n        \r\n        createAndAppendSelectedItem($checkBox, optionId, itemText) {\r\n            var $selectedItem = $(`<li data-option-id=\"${optionId}\"><span>${itemText}</span></li>`);\r\n            if (!this.options.selectedItemClass){\r\n                $selectedItem.addClass(defSelectedItemClass);\r\n                $selectedItem.css(defSelectedItemStyle)\r\n            }else{\r\n                $selectedItem.addClass(this.options.selectedItemClass);\r\n            }\r\n                \r\n            $selectedItem.insertBefore($(this.filterInputItem));\r\n            var $buttom = $(\"<button aria-label='Close' tabIndex='-1' type='button'><span aria-hidden='true'>&times;</span></button>\");\r\n            if (!this.options.removeSelectedItemButtonClass){\r\n                $buttom.addClass(defRemoveSelectedItemButtonClass);\r\n                $buttom.css(defRemoveSelectedItemButtonStyle);\r\n            }\r\n            else{\r\n                $buttom.addClass(this.options.removeSelectedItemButtonClass)\r\n            }\r\n            \r\n            $buttom.appendTo($selectedItem); \r\n            this.setCheck(optionId, true);\r\n\r\n            $buttom.click((event) => {\r\n                this.removeSelectedItem($selectedItem, optionId, $checkBox)\r\n                this.updateDropDownPosition();\r\n                $(this.filterInput).focus();\r\n            });\r\n        }\r\n\r\n        adoptFilterInputLength() {\r\n            this.filterInput.style.width = this.filterInput.value.length*1.3 + 2 + \"ch\";\r\n        }\r\n\r\n        analyzeInputText() {\r\n            var text = this.filterInput.value.trim().toLowerCase();\r\n            var item = [...this.dropDownMenu.querySelectorAll(\"LI\")]\r\n                .find(i => i.textContent.trim().toLowerCase() == text);\r\n            if (item != undefined) {\r\n                var $item = $(item);\r\n                var $checkBox = $item.find('input[type=\"checkbox\"]');\r\n                if (!$checkBox.prop('checked')) {\r\n                    var optionId = $item.data('option-id');\r\n                    var itemText = $item.find('label').text();\r\n                    this.createAndAppendSelectedItem($checkBox, optionId, itemText);\r\n                    $checkBox.prop('checked', true);\r\n\r\n                }\r\n                this.clearFilterInput();\r\n            }\r\n        }\r\n\r\n        resetSelectDropDownMenu() {\r\n            if (this.selectedDropDownItem != null) {\r\n                // IE11 doesn't support remove('text-primary', bg-light' )\r\n                this.selectedDropDownItem.classList.remove('bg-light');\r\n                this.selectedDropDownItem.classList.remove('text-primary');\r\n                this.selectedDropDownItem = null;\r\n            }\r\n            this.selectedDropDownIndex = null;\r\n        }\r\n        \r\n        keydownArrow(down) {\r\n            var items = [...this.dropDownMenu.querySelectorAll('LI:not([style*=\"display: none\"]')];\r\n            if (items.length > 0) {\r\n                this.showDropDown();\r\n                if (this.selectedDropDownItem == null) {\r\n                    \r\n                    this.selectedDropDownIndex = (down) ? 0 : items.length - 1;\r\n                }\r\n                else {\r\n                    // IE11 doesn't support remove('text-primary', bg-light' )\r\n                    this.selectedDropDownItem.classList.remove('bg-light');\r\n                    this.selectedDropDownItem.classList.remove('text-primary');\r\n                    if (down) {\r\n                        var newIndex = this.selectedDropDownIndex + 1;\r\n                        this.selectedDropDownIndex = (newIndex < items.length) ? newIndex : 0;\r\n                    } else {\r\n                        var newIndex = this.selectedDropDownIndex - 1;\r\n                        this.selectedDropDownIndex = (newIndex >= 0) ? newIndex : items.length - 1;\r\n                    }\r\n                }\r\n                this.selectedDropDownItem = items[this.selectedDropDownIndex];\r\n                // IE11 doesn't support add('text-primary', bg-light' )\r\n                this.selectedDropDownItem.classList.add('text-primary');\r\n                this.selectedDropDownItem.classList.add('bg-light' );\r\n                \r\n            }\r\n        }\r\n\r\n        removeSelectedItem($selectedItem, optionId, $checkBox) {\r\n            $selectedItem.remove();\r\n            this.setCheck(optionId, false);\r\n            $checkBox.prop('checked', false);\r\n        }\r\n\r\n        init() {\r\n            var $input = $(this.input);\r\n            $input.hide();\r\n            var disabled = this.input.disabled;\r\n\r\n            var $container = $(\"<div/>\");\r\n            if (!this.options.containerClass)\r\n                $container.addClass(this.options.containerClass);\r\n            $container.insertAfter($input);\r\n                \r\n            this.container = $container.get(0);\r\n\r\n            var $selectedPanel = $(\"<ul/>\");\r\n\r\n            if (!this.options.selectedPanelClass){\r\n                $selectedPanel.addClass(defSelectedPanelClass);\r\n                $selectedPanel.css(defSelectedPanelStyle);\r\n                $selectedPanel.css(\"min-height\",this.options.selectedPanelMinHeight);\r\n            }\r\n            else\r\n                $selectedPanel.addClass(this.options.selectedPanelClass);\r\n            $selectedPanel.appendTo($container);\r\n            this.selectedPanel = $selectedPanel.get(0);\r\n\r\n            if ($input.hasClass(\"is-valid\")){\r\n                $selectedPanel.removeClass(\"border\");\r\n                $selectedPanel.addClass(\"is-valid\");\r\n                //$selectedPanel.removeClass(\"btn-outline-danger\");\r\n                //$selectedPanel.addClass(\"btn-outline-success\");\r\n                \r\n            }\r\n            \r\n            if ($input.hasClass(\"is-invalid\")){\r\n                $selectedPanel.removeClass(\"border\");\r\n                $selectedPanel.addClass(\"is-invalid\");\r\n                //$selectedPanel.removeClass(\"btn-outline-success\");\r\n                //$selectedPanel.addClass(\"btn-outline-danger\");\r\n            }\r\n\r\n            var $filterInputItem = $('<li/>');\r\n            this.filterInputItem = $filterInputItem.get(0)\r\n            if (!this.options.filterInputItemClass)\r\n                $filterInputItem.css(defFilterInputItemStyleSys)\r\n            else\r\n                $filterInputItem.addClass(this.options.filterInputItemClass)\r\n            \r\n            $filterInputItem.appendTo($selectedPanel);\r\n            \r\n\r\n            var $filterInput = $('<input type=\"search\" autocomplete=\"off\">');\r\n            if (!this.options.filterInputClass){\r\n                $filterInput.css(defFilterInputStyle);\r\n                $filterInput.css(\"color\", this.options.filterInputColor);\r\n            } else {\r\n                $filterInput.addClass(this.options.filterInputClass);\r\n            }\r\n            $filterInput.appendTo($filterInputItem);\r\n            this.filterInput = $filterInput.get(0)\r\n\r\n            var $dropDownMenu = $(\"<ul/>\").appendTo($container);\r\n            this.dropDownMenu = $dropDownMenu.get(0);\r\n\r\n            $dropDownMenu.addClass(this.options.dropDownMenuClass);\r\n            //if (this.options.usePopper) {\r\n                this.popper = new Popper(this.filterInput, this.dropDownMenu, {\r\n                    placement: 'bottom-start',\r\n                    modifiers: {\r\n                        flip: {\r\n                            behavior: ['left', 'right']\r\n                        },\r\n                    },\r\n                });\r\n            // } else {\r\n            //     $(this.dropDownMenu).addClass(\"dropdown dropdown-menu\")\r\n            //     $(this.dropDownMenu).data(\"\", \"\");\r\n            //     $(this.dropDownMenu).dropdown({\r\n            //         placement: 'bottom-start',\r\n            //         flip: false,\r\n            //         reference: this.filterInput\r\n            //     });\r\n            // }\r\n\r\n            if (this.options.items == null) {\r\n                this.options.items.forEach(item => {\r\n                    var itemValue = item['value'];\r\n                    var itemText = item['text'];\r\n                    var isChecked = item['isChecked'];\r\n                    this.appendDropDownItem(itemValue, itemText, isChecked);\r\n                });\r\n                this.hasItems = options.items.length > 0;\r\n            } else {\r\n                var selectOptions = $input.find('option');\r\n                selectOptions.each(\r\n                    (index, option) => {\r\n                        var itemValue = option.value;\r\n                        var itemText = option.text;\r\n                        var isChecked = option.selected;\r\n                        this.appendDropDownItem(itemValue, itemText, isChecked);\r\n                    }\r\n                );\r\n                this.hasItems = selectOptions.length > 0;\r\n            }\r\n            if (disabled) {\r\n                this.filterInput.style.display = \"none\";\r\n                if(!this.options.selectedPanelReadonlyClass){\r\n                    $selectedPanel.css({\"background-color\": this.options.selectedPanelReadonlyBackgroundColor});\r\n                }else{\r\n                    $selectedPanel.addClass(this.options.selectedPanelReadonlyClass);\r\n                }\r\n                $selectedPanel.find('button').prop(\"disabled\", true);\r\n                $selectedPanel.addClass();\r\n            } else {\r\n                var inputId = this.input.id;\r\n                var formGroup = this.input.closest(\".form-group\");\r\n                if (formGroup != null) {\r\n                    var label = formGroup.querySelector(`label[for=\"${inputId}\"]`);\r\n                    var f = $(label).attr(\"for\");\r\n                    if ( f == this.input.id) {\r\n                        this.filterInput.id = \"dashboardcode-bsmultiselect-generated-filter-id-\" + this.input.id;\r\n                        label.setAttribute(\"for\", this.filterInput.id);\r\n                    }\r\n                }\r\n\r\n                this.updateDropDownPosition();\r\n\r\n                $dropDownMenu.click(event => {\r\n                    //console.log('dropDownMenu click - stopPropagation')\r\n                    event.stopPropagation();\r\n                });\r\n\r\n                $dropDownMenu.find('li').click((event) => {\r\n                    this.clickDropDownItem(event);\r\n                });\r\n\r\n                $dropDownMenu.on(\"mouseover\", (event) => {\r\n                    this.resetSelectDropDownMenu();\r\n                });\r\n\r\n                $dropDownMenu.find(\"li\").on(\"mouseover\", (event) => {\r\n                    event.target.closest(\"li\").classList.add('text-primary');\r\n                    event.target.closest(\"li\").classList.add('bg-light');\r\n                });\r\n\r\n                $dropDownMenu.find(\"li\").on(\"mouseout\", (event) => {\r\n                    event.target.closest(\"li\").classList.remove('text-primary');\r\n                    event.target.closest(\"li\").classList.remove('bg-light');\r\n                });\r\n\r\n                $selectedPanel.click((event) => {\r\n                    //console.log('selectedPanel click ' + event.target.nodeName);\r\n                    if (event.target.nodeName != \"INPUT\")\r\n                        $(this.filterInput).val('').focus();\r\n                    if (!(event.target.nodeName == \"BUTTON\" || (event.target.nodeName == \"SPAN\" && event.target.parentElement.nodeName == \"BUTTON\")))\r\n                        this.showDropDown();\r\n                });\r\n\r\n\r\n                $filterInput.on(\"keydown\", (event) => {\r\n                    if (event.which == 38 || event.keyCode == 38) {\r\n                        event.preventDefault();\r\n                        this.keydownArrow(false);\r\n                    }\r\n                    else if (event.which == 40 || event.keyCode == 40) {\r\n                        event.preventDefault()\r\n                        this.keydownArrow(true);\r\n                    }\r\n                    else if (event.which == 13 || event.keyCode == 13) {\r\n                        event.preventDefault();\r\n                    }\r\n                    else if (event.which == 9 || event.keyCode == 9){\r\n                        if (this.filterInput)\r\n                            event.preventDefault();\r\n                    }\r\n                    else {\r\n                        if (event.which == 8 || event.keyCode == 8) {\r\n                            // detect that backspace is at start of input field (this will be used at keydown)\r\n                            this.backspaceAtStartPoint = (this.filterInput.selectionStart == 0 && this.filterInput.selectionEnd == 0);\r\n                        }\r\n                        this.resetSelectDropDownMenu();\r\n                    }\r\n                });\r\n\r\n                $filterInput.on(\"keyup\", (event) => {\r\n                    if (event.which == 13 || event.keyCode == 13 || event.which == 9 || event.keyCode == 9) {\r\n                        if (this.selectedDropDownItem != null) {\r\n                            var $item = $(this.selectedDropDownItem);\r\n                            var $checkBox = $item.find('input[type=\"checkbox\"]');\r\n                            var optionId = $item.data('option-id');\r\n                            if (!$checkBox.prop('checked')) {\r\n                                var itemText = $item.find('label').text();\r\n                                this.createAndAppendSelectedItem($checkBox, optionId, itemText);\r\n                                $checkBox.prop('checked', true);\r\n                                this.filterInput.value = \"\";\r\n                            } else {\r\n                                var $selectedItem = $(this.selectedPanel).find(`li[data-option-id=\"${optionId}\"]`);\r\n                                this.removeSelectedItem($selectedItem, optionId, $checkBox);\r\n                            }\r\n                            //this.resetSelectDropDownMenu();\r\n                        } else {\r\n                            this.analyzeInputText();\r\n                        }\r\n                        if (event.which == 9 || event.keyCode == 9){\r\n                            this.closeDropDown();\r\n\r\n                        }\r\n                    } else if (event.which == 8 || event.keyCode == 8) {\r\n                        var startPosition = this.filterInput.selectionStart;\r\n                        var endPosition = this.filterInput.selectionEnd;\r\n                        if (endPosition == 0 && startPosition == 0 && this.backspaceAtStartPoint) {\r\n                            var array = [...this.selectedPanel.querySelectorAll(\"LI\")];\r\n                            if (array.length >= 2) {\r\n                                var itemToDelete = array[array.length - 2];\r\n                                var $itemToDelete = $(itemToDelete);\r\n                                var optionId = $itemToDelete.data(\"option-id\");\r\n                                var item = [...this.dropDownMenu.querySelectorAll(\"LI\")]\r\n                                    .find(i => i.dataset.optionId == optionId);\r\n                                var $item = $(item);\r\n                                var $checkBox = $item.find('input[type=\"checkbox\"]');\r\n                                var $selectedItem = $(this.selectedPanel).find(`li[data-option-id=\"${optionId}\"]`);\r\n                                this.removeSelectedItem($selectedItem, optionId, $checkBox);\r\n                            }\r\n                        }\r\n                        this.backspaceAtStartPoint = null;\r\n                    } else if (event.which == 27 || event.keyCode == 27) { // escape\r\n                        this.closeDropDown();\r\n                    }\r\n\r\n                });\r\n\r\n                // Set on change for filter input\r\n                $filterInput.on('input', (event) => { // keyup focus\r\n                    //console.log('filterInput input');\r\n                    this.adoptFilterInputLength();\r\n                    this.filterDropDownMenu();\r\n                    if (this.hasItems) {\r\n                        this.updateDropDownPosition(); // support case when textbox can change its place because of line break (texbox grow with each key press)\r\n                        this.showDropDown();\r\n                    } else {\r\n                        this.hideDropDown();\r\n                    }\r\n                });\r\n\r\n                $filterInput.focusin((event) => {\r\n                    if( $selectedPanel.hasClass(\"is-valid\") &&  this.options.selectedPanelValidBoxShadow ){\r\n                        $selectedPanel.css(\"box-shadow\", this.options.selectedPanelValidBoxShadow );              \r\n                    }else if ( $selectedPanel.hasClass(\"is-invalid\") && this.options.selectedPanelInvalidBoxShadow){\r\n                        $selectedPanel.css(\"box-shadow\", this.options.selectedPanelInvalidBoxShadow );\r\n                    }\r\n                    $(this.selectedPanel).addClass(\"focus\");\r\n                });\r\n\r\n                $filterInput.focusout((event) => {\r\n                    if (!this.skipFocusout)\r\n                    {\r\n                        $selectedPanel.css(\"box-shadow\", \"\" );                \r\n                        $(this.selectedPanel).removeClass(\"focus\");\r\n                    }\r\n                });\r\n\r\n                $container.mousedown((event) => {\r\n                    this.skipFocusout = true;\r\n\r\n                });\r\n\r\n                $(window.document).mouseup((event) => {\r\n                    this.skipFocusout = false;\r\n                    if (!(this.container === event.target || this.container.contains(event.target))) {\r\n                        //console.log(\"document mouseup outside container\");\r\n                        this.closeDropDown();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    var jQueryInterface = function (options) {\r\n        return this.each(function () {\r\n            let data = $(this).data(dataKey)\r\n\r\n            if (!data) {\r\n                if (/dispose|hide/.test(options)) {\r\n                    return;\r\n                }\r\n                else {\r\n                    const optionsObject = (typeof options === 'object')? options:null;\r\n                    data = new Plugin(this, optionsObject);\r\n                    $(this).data(dataKey, data);\r\n                }\r\n            }\r\n\r\n            if (typeof options === 'string') {\r\n                var methodName = options;\r\n                if (typeof data[methodName] === 'undefined') {\r\n                    throw new TypeError(`No method named \"${methodName}\"`)\r\n                }\r\n                data[methodName]()\r\n            }\r\n        })\r\n    }\r\n\r\n    $.fn[pluginName] = jQueryInterface;\r\n\r\n    // in case of mulitple $(this) it will return 1st element plugin instance\r\n    $.fn[pluginName.charAt(0).toUpperCase() + pluginName.slice(1)] = function (options) {\r\n        return $(this).data(\"plugin_\" + pluginName);\r\n    };\r\n\r\n    $.fn[pluginName].Constructor = Plugin;\r\n\r\n    $.fn[pluginName].noConflict = function () {\r\n        $.fn[pluginName] = JQUERY_NO_CONFLICT\r\n        return jQueryInterface;\r\n    }\r\n    return Plugin;\r\n})(window, $, Popper);\r\n\r\nexport default BsMultiSelect;\r\n"]}